// Code generated by "stringer -type=AST_TYPE -trimprefix=AST_"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AST_UNKNOWN-0]
	_ = x[AST_SCRIPT-1]
	_ = x[AST_IDENT-2]
	_ = x[AST_LITERAL_STRING-3]
	_ = x[AST_LITERAL_NUMBER-4]
	_ = x[AST_LITERAL_BOOL-5]
	_ = x[AST_LITERAL_ARRAY-6]
	_ = x[AST_LITERAL_STRUCT-7]
	_ = x[AST_STRUCT_FIELD-8]
	_ = x[AST_BINOP-9]
	_ = x[AST_UNOP_PREFIX-10]
	_ = x[AST_UNOP_POSTFIX-11]
	_ = x[AST_CALL-12]
	_ = x[AST_ACCESS-13]
	_ = x[AST_ATTR-14]
	_ = x[AST_BLOCK-15]
	_ = x[AST_FUNC_DECL-16]
	_ = x[AST_ARG-17]
	_ = x[AST_VAR_DECL-18]
	_ = x[AST_ASSIGN-19]
	_ = x[AST_IF-20]
	_ = x[AST_ELIF-21]
	_ = x[AST_ELSE-22]
	_ = x[AST_FOR-23]
	_ = x[AST_WHILE-24]
	_ = x[AST_DOUNTIL-25]
	_ = x[AST_REPEAT-26]
	_ = x[AST_RETURN-27]
	_ = x[AST_CONTINUE-28]
	_ = x[AST_BREAK-29]
}

const _AST_TYPE_name = "UNKNOWNSCRIPTIDENTLITERAL_STRINGLITERAL_NUMBERLITERAL_BOOLLITERAL_ARRAYLITERAL_STRUCTSTRUCT_FIELDBINOPUNOP_PREFIXUNOP_POSTFIXCALLACCESSATTRBLOCKFUNC_DECLARGVAR_DECLASSIGNIFELIFELSEFORWHILEDOUNTILREPEATRETURNCONTINUEBREAK"

var _AST_TYPE_index = [...]uint8{0, 7, 13, 18, 32, 46, 58, 71, 85, 97, 102, 113, 125, 129, 135, 139, 144, 153, 156, 164, 170, 172, 176, 180, 183, 188, 195, 201, 207, 215, 220}

func (i AST_TYPE) String() string {
	if i < 0 || i >= AST_TYPE(len(_AST_TYPE_index)-1) {
		return "AST_TYPE(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AST_TYPE_name[_AST_TYPE_index[i]:_AST_TYPE_index[i+1]]
}
