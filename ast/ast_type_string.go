// Code generated by "stringer -type=AST_TYPE -trimprefix=AST_"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AST_UNKNOWN-0]
	_ = x[AST_SCRIPT-1]
	_ = x[AST_IDENT-2]
	_ = x[AST_LITERAL_STRING-3]
	_ = x[AST_LITERAL_NUMBER-4]
	_ = x[AST_LITERAL_BOOL-5]
	_ = x[AST_LITERAL_ARRAY-6]
	_ = x[AST_LITERAL_STRUCT-7]
	_ = x[AST_ENUM-8]
	_ = x[AST_STRUCT_FIELD-9]
	_ = x[AST_BINOP-10]
	_ = x[AST_UNOP_PREFIX-11]
	_ = x[AST_UNOP_POSTFIX-12]
	_ = x[AST_CALL-13]
	_ = x[AST_ACCESS-14]
	_ = x[AST_ATTR-15]
	_ = x[AST_TERNARY-16]
	_ = x[AST_BLOCK-17]
	_ = x[AST_FUNC_DECL-18]
	_ = x[AST_ARG-19]
	_ = x[AST_VAR_DECL-20]
	_ = x[AST_ASSIGN-21]
	_ = x[AST_IF-22]
	_ = x[AST_ELIF-23]
	_ = x[AST_FOR-24]
	_ = x[AST_WHILE-25]
	_ = x[AST_DOUNTIL-26]
	_ = x[AST_REPEAT-27]
	_ = x[AST_WITH-28]
	_ = x[AST_CASE-29]
	_ = x[AST_DEFAULT-30]
	_ = x[AST_SWITCH-31]
	_ = x[AST_TRY_CATCH-32]
	_ = x[AST_RETURN-33]
	_ = x[AST_CONTINUE-34]
	_ = x[AST_BREAK-35]
}

const _AST_TYPE_name = "UNKNOWNSCRIPTIDENTLITERAL_STRINGLITERAL_NUMBERLITERAL_BOOLLITERAL_ARRAYLITERAL_STRUCTENUMSTRUCT_FIELDBINOPUNOP_PREFIXUNOP_POSTFIXCALLACCESSATTRTERNARYBLOCKFUNC_DECLARGVAR_DECLASSIGNIFELIFFORWHILEDOUNTILREPEATWITHCASEDEFAULTSWITCHTRY_CATCHRETURNCONTINUEBREAK"

var _AST_TYPE_index = [...]uint16{0, 7, 13, 18, 32, 46, 58, 71, 85, 89, 101, 106, 117, 129, 133, 139, 143, 150, 155, 164, 167, 175, 181, 183, 187, 190, 195, 202, 208, 212, 216, 223, 229, 238, 244, 252, 257}

func (i AST_TYPE) String() string {
	if i < 0 || i >= AST_TYPE(len(_AST_TYPE_index)-1) {
		return "AST_TYPE(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AST_TYPE_name[_AST_TYPE_index[i]:_AST_TYPE_index[i+1]]
}
